<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="carNpc">
	<resultMap id="carRstMap" type="car">
		<id property="id" column="id"/>
		<result property="createdDt" column="created_dt" />
		<result property="updatedDt" column="updated_dt" />
		<result property="plateNumber" column="plate_number" />
		<result property="purchaser" column="purchaser" />
		<result property="purchaserPhone" column="purchaser_phone" />
		<result property="purchaseDate" column="purchase_date" />
		<result property="purchasePrice" column="purchase_price" />
		<result property="content" column="content" />
		<association property="carSeries" column="series_id" select="carSeriesNpc.queryByCarSeriesId"/>
		<association property="city" column="city_id" select="cityNpc.queryByCityId"/>
		<association property="createdUser" column="created_user" select="adminNpc.queryByAdminId"/>
		<association property="updatedUser" column="updated_user" select="adminNpc.queryByAdminId"/>
	</resultMap>

	<sql id="query_where">
		<where>
			<if test="car != null">
				<if test="car.id != null and car.id != ''">
					and T.id = #{car.id}
				</if>
				<if test="car.plateNumber != null and car.plateNumber != ''">
					and T.plate_number like '%${car.plateNumber}%'
				</if>
				<if test="car.carSeries != null">
					<if test="car.carSeries.id != null and car.carSeries.id != ''">
						and T.series_id = #{car.carSeries.id}
					</if>
					<if test="car.carSeries.seriesName != null and car.carSeries.seriesName != ''">
						and CS.series_name like '%${car.carSeries.seriesName}%'
					</if>
				</if>
				<if test="car.city != null">
					<if test="car.city.id != null and car.city.id != ''">
						and T.city_id = #{car.city.id}
					</if>
				</if>
			</if>
		</where>
	</sql>
	<sql id="queryEquals_where">
		<where>
			<if test="car != null">
				<if test="car.id != null and car.id != ''">
					and T.id = #{car.id}
				</if>
				<if test="car.plateNumber != null and car.plateNumber != ''">
					and T.plate_number = #{car.plateNumber}
				</if>
				<if test="car.carSeries != null">
					<if test="car.carSeries.id != null and car.carSeries.id != ''">
						and T.series_id = #{car.carSeries.id}
					</if>
					<if test="car.carSeries.seriesName != null and car.carSeries.seriesName != ''">
						and CS.series_name like '%${car.carSeries.seriesName}%'
					</if>
				</if>
				<if test="car.city != null">
					<if test="car.city.id != null and car.city.id != ''">
						and T.city_id = #{car.city.id}
					</if>
				</if>
			</if>
		</where>
	</sql>
	<sql id="limit">
		<if test="pager != null">
			limit ${pager.startIndex}, ${pager.pageSize}
		</if>
	</sql>

	<select id="queryList" resultMap="carRstMap" parameterType="map">
		SELECT T.* FROM `t_car` T
		left join t_car_series CS on CS.id = T.series_id
		<include refid="query_where" />
		order by T.plate_number asc
		<include refid="limit"/>
	</select>
	
	<select id="queryEqualsList" resultMap="carRstMap" parameterType="map">
		SELECT T.* FROM `t_car` T
		left join t_car_series CS on CS.id = T.series_id
		<include refid="queryEquals_where" />
		order by T.plate_number asc
		<include refid="limit"/>
	</select>

	<select id="queryByCarId" resultMap="carRstMap" parameterType="string">
		SELECT T.* FROM `t_car` T
		where T.id = #{id}
	</select>
	
	<select id="count" resultType="int" parameterType="map">
		select count(T.id) FROM t_car T
		left join t_car_series CS on CS.id = T.series_id
		<include refid="query_where"/>
	</select>
	
	<select id="countByCarSeriesIds" resultType="int" parameterType="string">
		select count(T.id) FROM t_car T
		where T.series_id in (${_parameter})
	</select>
	
	<insert id="add" parameterType="car">
		<selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO `t_car`(
			created_user, created_dt, updated_user, updated_dt,
			plate_number, purchaser, purchaser_phone, purchase_date, purchase_price,
			series_id, city_id, content
		) VALUES (
			#{createdUser.id}, NOW(), #{updatedUser.id}, NOW(),
			#{plateNumber}, #{purchaser}, #{purchaserPhone}, #{purchaseDate}, #{purchasePrice},
			#{carSeries.id}, #{city.id}, #{content}
		)
	</insert>
	
	<update id="update" parameterType="car">
		update `t_car` set
			updated_user = #{updatedUser.id},
			updated_dt = NOW(),
			plate_number = #{plateNumber},
			purchaser = #{purchaser},
			purchaser_phone = #{purchaserPhone},
			purchase_date = #{purchaseDate},
			purchase_price = #{purchasePrice},
			series_id = #{carSeries.id},
			city_id = #{city.id},
			content = #{content}
			
			WHERE id = #{id}
	</update>
	
	<delete id="delete" parameterType="string">
		delete from `t_car` where id in (${_parameter})
	</delete>
</mapper>