<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminNpc">
	<!-- 返回值映射关系 -->
	<resultMap id="adminRstMap" type="admin">
		<id property="id" column="id"/>
		<result property="createdDt" column="created_dt" />
		<result property="updatedDt" column="updated_dt" />
		<result property="adminName" column="admin_name" />
		<result property="password" column="login_pwd"/>
		<result property="loginName" column="login_name"/>
		<result property="type" column="type"/>
		<result property="isDelete" column="is_delete"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="companyName" column="company_name"/>
		<result property="inBlacklist" column="in_blacklist"/>
		<association property="city" column="city_id" select="cityNpc.queryByCityId"/>
		<association property="role" column="role_id" select="roleNpc.queryByRoleId"/>
		<association property="createdUser" column="created_user" select="adminNpc.queryByAdminId"/>
		<association property="updatedUser" column="updated_user" select="adminNpc.queryByAdminId"/>
	</resultMap>
	
	<!-- 查询条件 -->
	<sql id="where">
		<where>
			<if test="admin != null">
				<if test="admin.id !=null and admin.id != ''">
					and T.id = ${admin.id}
				</if>
				<if test="admin.loginName !=null and admin.loginName != ''">
					and T.login_name like '%${admin.loginName}%'
				</if>
				<if test="admin.adminName !=null and admin.adminName != ''">
					and T.admin_name like '%${admin.adminName}%'
				</if>
				<if test="admin.email !=null and admin.email != ''">
					and T.email like '%${admin.email}%'
				</if>
				<if test="admin.phone !=null and admin.phone != ''">
					and T.phone like '%${admin.phone}%'
				</if>
				<if test="admin.type !=null and admin.type != ''">
					and T.type like '${admin.type}%'
				</if>
				<if test="admin.isDelete !=null and admin.isDelete != ''">
					and T.is_delete = #{admin.isDelete}
				</if>
				<if test="admin.inBlacklist !=null and admin.inBlacklist != ''">
					and T.in_blacklist = #{admin.inBlacklist}
				</if>
				<if test="admin.city != null">
					<if test="admin.city.id != null and admin.city.id != ''">
						and T.city_id = #{admin.city.id}
					</if>
				</if>
			</if>
		</where>
	</sql>
	<sql id="queryEquals_where">
		<where>
			<if test="admin != null">
				<if test="admin.id !=null and admin.id != ''">
					and T.id = ${admin.id}
				</if>
				<if test="admin.loginName !=null and admin.loginName != ''">
					and T.login_name = #{admin.loginName}
				</if>
				<if test="admin.adminName !=null and admin.adminName != ''">
					and T.admin_name = #{admin.adminName}
				</if>
				<if test="admin.email !=null and admin.email != ''">
					and T.email = #{admin.email}
				</if>
				<if test="admin.phone !=null and admin.phone != ''">
					and T.phone = #{admin.phone}
				</if>
				<if test="admin.type !=null and admin.type != ''">
					and T.type = #{admin.type}
				</if>
				<if test="admin.isDelete !=null and admin.isDelete != ''">
					and T.is_delete = #{admin.isDelete}
				</if>
				<if test="admin.inBlacklist !=null and admin.inBlacklist != ''">
					and T.in_blacklist = #{admin.inBlacklist}
				</if>
				<if test="admin.city != null">
					<if test="admin.city.id != null and admin.city.id != ''">
						and T.city_id = #{admin.city.id}
					</if>
				</if>
			</if>
		</where>
	</sql>
	<sql id="limit">
		<if test="pager != null">
			limit ${pager.startIndex}, ${pager.pageSize}
		</if>
	</sql>

	<select id="queryByLoginName" resultMap="adminRstMap" parameterType="map">
		SELECT T.* FROM t_admin T
		where T.login_name = #{admin.loginName}
		<if test="admin != null">
			<if test="admin.type !=null and admin.type != ''">
				and T.type like '${admin.type}%'
			</if>
			<if test="admin.isDelete !=null and admin.isDelete != ''">
				and T.is_delete = #{admin.isDelete}
			</if>
		</if>
	</select>
	<select id="queryByAdminId" resultMap="adminRstMap" parameterType="map">
		SELECT T.* FROM t_admin T
		where T.id = #{id}
	</select>
	<!-- 条件查询 -->
	<select id="queryList" resultMap="adminRstMap" parameterType="map">
		SELECT T.* FROM t_admin T
		<include refid="where"/>
		<include refid="limit"/>
	</select>
	<select id="queryEqualsList" resultMap="adminRstMap" parameterType="map">
		SELECT T.* FROM t_admin T
		<include refid="queryEquals_where"/>
		<include refid="limit"/>
	</select>
	
	<select id="count" resultType="int" parameterType="map">
		select count(T.id) FROM t_admin T
		<include refid="where"/>
	</select>
	
	<insert id="add" parameterType="admin">
		<selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO t_admin(
			created_user, created_dt, updated_user, updated_dt,
			admin_name, login_name, login_pwd, type, city_id,
			role_id, email, phone, company_name, in_blacklist
		) VALUES (
			#{createdUser.id}, NOW(), #{updatedUser.id}, NOW(),
			#{adminName}, #{loginName}, #{password}, #{type}, #{city.id},
			#{role.id}, #{email}, #{phone}, #{companyName}, #{inBlacklist}
		)
	</insert>
	
	<update id="update" parameterType="admin">
		update `t_admin` set
			updated_user = #{updatedUser.id},
			updated_dt = NOW(),
			admin_name = #{adminName},
			login_name = #{loginName},
			login_pwd = #{password},
			type = #{type},
			city_id = #{city.id},
			role_id = #{role.id},
			email = #{email},
			phone = #{phone},
			company_name = #{companyName},
			in_blacklist = #{inBlacklist}
			
			WHERE id = #{id}
	</update>
	
	<update id="deleteAll" parameterType="string">
		update `t_admin` set
			is_delete = '1'
			where id in (${_parameter})
	</update>
	
	<update id="intoBlacklist" parameterType="string">
		update `t_admin` set
			in_blacklist = '1'
			where id in (${_parameter})
	</update>
	
	<update id="outofBlacklist" parameterType="string">
		update `t_admin` set
			in_blacklist = '0'
			where id in (${_parameter})
	</update>
	
	<update id="resetPwd" parameterType="map">
		update `t_admin` set
			login_pwd = #{password}
			where id in (${ids})
	</update>
</mapper>