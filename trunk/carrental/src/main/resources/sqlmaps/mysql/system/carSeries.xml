<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="carSeriesNpc">
	<resultMap id="carSeriesRstMap" type="carSeries">
		<id property="id" column="id"/>
		<result property="createdDt" column="created_dt" />
		<result property="updatedDt" column="updated_dt" />
		<result property="seriesName" column="series_name" />
		<result property="manufacturer" column="manufacturer" />
		<result property="seriesImgPath" column="series_img_path" />
		<result property="manufacturerLogoPath" column="manufacturer_logo_path" />
		<result property="styleName" column="series_name" />
		<result property="level" column="level" />
		<result property="engine" column="engine" />
		<result property="gearbox" column="gearbox" />
		<result property="LWH" column="lwh" />
		<result property="structrue" column="structrue" />
		<result property="fuelConsumption" column="fuel_consumption" />
		<result property="fuelCapacity" column="fuel_capacity" />
		<result property="trunkCapacity" column="trunk_capacity" />
		<result property="fuelForm" column="fuel_form" />
		<result property="ROZ" column="roz" />
		<result property="marketDate" column="market_date" />
		<result property="content" column="content" />
		<result property="isDelete" column="is_delete" />
		<association property="createdUser" column="created_user" select="adminNpc.queryByAdminId"/>
		<association property="updatedUser" column="updated_user" select="adminNpc.queryByAdminId"/>
	</resultMap>
	
	<sql id="query_where">
		<where>
			<if test="carSeries != null">
				<if test="carSeries.id != null and carSeries.id != ''">
					and T.id = #{carSeries.id}
				</if>
				<if test="carSeries.seriesName != null and carSeries.seriesName != ''">
					and T.series_name like '%${carSeries.seriesName}%'
				</if>
				<if test="carSeries.manufacturer != null and carSeries.manufacturer != ''">
					and T.manufacturer like '%${carSeries.manufacturer}%'
				</if>
				<if test="carSeries.engine != null and carSeries.engine != ''">
					and T.engine like '%${carSeries.engine}%'
				</if>
				<if test="carSeries.isDelete != null and carSeries.isDelete != ''">
					and T.is_delete = #{carSeries.isDelete}
				</if>
			</if>
		</where>
	</sql>
	<sql id="queryEquals_where">
		<where>
			<if test="carSeries != null">
				<if test="carSeries.id != null and carSeries.id != ''">
					and T.id = #{carSeries.id}
				</if>
				<if test="carSeries.seriesName != null and carSeries.seriesName != ''">
					and T.series_name = #{carSeries.seriesName}
				</if>
				<if test="carSeries.manufacturer != null and carSeries.manufacturer != ''">
					and T.manufacturer = #{carSeries.manufacturer}
				</if>
				<if test="carSeries.engine != null and carSeries.engine != ''">
					and T.engine = #{carSeries.engine}
				</if>
				<if test="carSeries.isDelete != null and carSeries.isDelete != ''">
					and T.is_delete = #{carSeries.isDelete}
				</if>
			</if>
		</where>
	</sql>
	<sql id="limit">
		<if test="pager != null">
			limit ${pager.startIndex}, ${pager.pageSize}
		</if>
	</sql>

	<select id="queryList" resultMap="carSeriesRstMap" parameterType="map">
		SELECT T.* FROM `t_car_series` T
		<include refid="query_where" />
		order by T.series_name asc
		<include refid="limit"/>
	</select>
	
	<select id="queryEqualsList" resultMap="carSeriesRstMap" parameterType="map">
		SELECT T.* FROM `t_car_series` T
		<include refid="queryEquals_where" />
		order by T.series_name asc
		<include refid="limit"/>
	</select>
	
	<select id="queryListByIds" resultMap="carSeriesRstMap" parameterType="string">
		SELECT T.* FROM `t_car_series` T
		where T.id in (${ids})
		order by T.series_name asc
	</select>
	
	<select id="count" resultType="int" parameterType="map">
		select count(T.id) FROM t_car_series T
		<include refid="query_where"/>
	</select>
	
	<select id="countEquals" resultType="int" parameterType="map">
		select count(T.id) FROM t_car_series T
		<include refid="queryEquals_where"/>
	</select>
	
	<select id="queryByCarSeriesId" resultMap="carSeriesRstMap" parameterType="string">
		SELECT T.* FROM `t_car_series` T
		where T.id = #{id}
	</select>
	
	<select id="queryByRentTypeId" resultMap="carSeriesRstMap" parameterType="string">
		SELECT T.* FROM `t_car_series` T
		join t_renttype_carseries RC on RC.series_id = T.id
		where T.is_delete = '0' and RC.type_id = #{typeId}
	</select>
	
	<insert id="add" parameterType="carSeries">
		<selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO `t_car_series`(
			created_user, created_dt, updated_user, updated_dt,
			style_name, level, engine, gearbox, lwh,
			structrue, fuel_consumption, fuel_capacity, trunk_capacity, fuel_form,
			roz, market_date, content, series_name, manufacturer,
			series_img_path, manufacturer_logo_path, is_delete
		) VALUES (
			#{createdUser.id}, NOW(), #{updatedUser.id}, NOW(),
			#{styleName}, #{level}, #{engine}, #{gearbox}, #{LWH},
			#{structrue}, #{fuelConsumption}, #{fuelCapacity}, #{trunkCapacity}, #{fuelForm},
			#{ROZ}, #{marketDate}, #{content}, #{seriesName}, #{manufacturer},
			#{seriesImgPath}, #{manufacturerLogoPath}, '0'
		)
	</insert>
	
	<update id="update" parameterType="carSeries">
		update `t_car_series` set
			updated_user = #{updatedUser.id},
			updated_dt = NOW(),
			style_name = #{styleName},
			level = #{level},
			engine = #{engine},
			gearbox = #{gearbox},
			lwh = #{LWH},
			structrue = #{structrue},
			fuel_consumption = #{fuelConsumption},
			fuel_capacity = #{fuelCapacity},
			trunk_capacity = #{trunkCapacity},
			fuel_form = #{fuelForm},
			roz = #{ROZ},
			market_date = #{marketDate},
			content = #{content},
			series_name = #{seriesName},
			manufacturer = #{manufacturer},
			series_img_path = #{seriesImgPath},
			manufacturer_logo_path = #{manufacturerLogoPath}
			
			WHERE id = #{id}
	</update>
	
	<update id="delete" parameterType="string">
		update `t_car_series` set
			is_delete = '1'
			where id in (${_parameter})
	</update>
</mapper>