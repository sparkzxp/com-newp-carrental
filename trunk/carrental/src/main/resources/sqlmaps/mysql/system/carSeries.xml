<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="carSeriesNpc">
	<resultMap id="carSeriesRstMap" type="carSeries">
		<id property="id" column="ID"/>
		<result property="createdDt" column="CREATED_DT" />
		<result property="updatedDt" column="UPDATED_DT" />
		<result property="seriesName" column="SERIES_NAME" />
		<result property="manufacturer" column="MANUFACTURER" />
		<result property="seriesImgPath" column="SERIES_IMG_PATH" />
		<result property="manufacturerLogoPath" column="MANUFACTURER_LOGO_PATH" />
		<result property="styleName" column="SERIES_NAME" />
		<result property="level" column="LEVEL" />
		<result property="engine" column="ENGINE" />
		<result property="gearbox" column="GEARBOX" />
		<result property="LWH" column="LWH" />
		<result property="structrue" column="STRUCTRUE" />
		<result property="fuelConsumption" column="FUEL_CONSUMPTION" />
		<result property="fuelCapacity" column="FUEL_CAPACITY" />
		<result property="trunkCapacity" column="TRUNK_CAPACITY" />
		<result property="fuelForm" column="FUEL_FORM" />
		<result property="ROZ" column="ROZ" />
		<result property="marketDate" column="MARKET_DATE" />
		<result property="content" column="CONTENT" />
		<association property="createdUser" column="CREATED_USER" select="adminNpc.queryByAdminId"/>
		<association property="updatedUser" column="UPDATED_USER" select="adminNpc.queryByAdminId"/>
	</resultMap>
	
	<sql id="query_where">
		<where>
			<if test="carSeries != null">
				<if test="carSeries.id != null and carSeries.id != ''">
					and T.ID = #{carSeries.id}
				</if>
				<if test="carSeries.seriesName != null and carSeries.seriesName != ''">
					and T.SERIES_NAME like '%${carSeries.seriesName}%'
				</if>
				<if test="carSeries.manufacturer != null and carSeries.manufacturer != ''">
					and T.MANUFACTURER like '%${carSeries.manufacturer}%'
				</if>
				<if test="carSeries.engine != null and carSeries.engine != ''">
					and T.ENGINE like '%${carSeries.engine}%'
				</if>
			</if>
		</where>
	</sql>
	<sql id="queryEquals_where">
		<where>
			<if test="carSeries != null">
				<if test="carSeries.id != null and carSeries.id != ''">
					and T.ID = #{carSeries.id}
				</if>
				<if test="carSeries.seriesName != null and carSeries.seriesName != ''">
					and T.SERIES_NAME = #{carSeries.seriesName}
				</if>
				<if test="carSeries.manufacturer != null and carSeries.manufacturer != ''">
					and T.MANUFACTURER = #{carSeries.manufacturer}
				</if>
				<if test="carSeries.engine != null and carSeries.engine != ''">
					and T.ENGINE = #{carSeries.engine}
				</if>
			</if>
		</where>
	</sql>
	<sql id="limit">
		<if test="pager != null">
			limit ${pager.startIndex}, ${pager.pageSize}
		</if>
	</sql>

	<select id="queryList" resultMap="carSeriesRstMap" parameterType="map">
		SELECT T.* FROM `T_CAR_SERIES` T
		<include refid="query_where" />
		order by T.SERIES_NAME asc
		<include refid="limit"/>
	</select>
	
	<select id="queryEqualsList" resultMap="carSeriesRstMap" parameterType="map">
		SELECT T.* FROM `T_CAR_SERIES` T
		<include refid="queryEquals_where" />
		order by T.SERIES_NAME asc
		<include refid="limit"/>
	</select>
	
	<select id="queryListByIds" resultMap="carSeriesRstMap" parameterType="string">
		SELECT T.* FROM `T_CAR_SERIES` T
		where T.ID in (${ids})
		order by T.SERIES_NAME asc
	</select>
	
	<select id="count" resultType="int" parameterType="map">
		select count(T.ID) FROM T_CAR_SERIES T
		<include refid="query_where"/>
	</select>
	
	<select id="queryByRentTypeId" resultMap="carSeriesRstMap" parameterType="string">
		SELECT T.* FROM `T_CAR_SERIES` T
		join T_RENTTYPE_CARSERIES RC on RC.SERIES_ID = T.ID
		where RC.TYPE_ID = #{typeId}
	</select>
	
	<insert id="add" parameterType="carSeries">
		<selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO `T_CAR_SERIES`(
			CREATED_USER, CREATED_DT, UPDATED_USER, UPDATED_DT,
			STYLE_NAME, LEVEL, ENGINE, GEARBOX, LWH,
			STRUCTRUE, FUEL_CONSUMPTION, FUEL_CAPACITY, TRUNK_CAPACITY, FUEL_FORM,
			ROZ, MARKET_DATE, CONTENT, SERIES_NAME, MANUFACTURER,
			SERIES_IMG_PATH, MANUFACTURER_LOGO_PATH
		) VALUES (
			#{createdUser.id}, NOW(), #{updatedUser.id}, NOW(),
			#{styleName}, #{level}, #{engine}, #{gearbox}, #{LWH},
			#{structrue}, #{fuelConsumption}, #{fuelCapacity}, #{trunkCapacity}, #{fuelForm},
			#{ROZ}, #{marketDate}, #{content}, #{seriesName}, #{manufacturer},
			#{seriesImgPath}, #{manufacturerLogoPath}
		)
	</insert>
	
	<update id="update" parameterType="carSeries">
		update `T_CAR_SERIES` set
			UPDATED_USER = #{updatedUser.id},
			UPDATED_DT = NOW(),
			STYLE_NAME = #{styleName},
			LEVEL = #{level},
			ENGINE = #{engine},
			GEARBOX = #{gearbox},
			LWH = #{LWH},
			STRUCTRUE = #{structrue},
			FUEL_CONSUMPTION = #{fuelConsumption},
			FUEL_CAPACITY = #{fuelCapacity},
			TRUNK_CAPACITY = #{trunkCapacity},
			FUEL_FORM = #{fuelForm},
			ROZ = #{ROZ},
			MARKET_DATE = #{marketDate},
			CONTENT = #{content},
			SERIES_NAME = #{seriesName},
			MANUFACTURER = #{manufacturer},
			SERIES_IMG_PATH = #{seriesImgPath},
			MANUFACTURER_LOGO_PATH = #{manufacturerLogoPath}
			
			WHERE ID = #{id}
	</update>
	
	<delete id="delete" parameterType="string">
		delete from `T_CAR_SERIES` where ID in (${_parameter})
	</delete>
</mapper>